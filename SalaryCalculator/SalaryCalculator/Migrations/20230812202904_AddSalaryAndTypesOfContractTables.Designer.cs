// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.Data;

#nullable disable

namespace SalaryCalculator.Migrations
{
    [DbContext(typeof(SalaryCalculatorContext))]
    [Migration("20230812202904_AddSalaryAndTypesOfContractTables")]
    partial class AddSalaryAndTypesOfContractTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalaryCalculator.Entities.SalaryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Brutto")
                        .HasColumnType("bigint");

                    b.Property<double>("Netto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SalaryEntities");
                });

            modelBuilder.Entity("SalaryCalculator.Entities.TypeOfContractEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Shortcut")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TypesOfContract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Umowa o pracę",
                            Shortcut = "UoP"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Business to business",
                            Shortcut = "B2B"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Umowa zlecenie",
                            Shortcut = "UZ"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
